# Generated by Django 5.2.1 on 2025-06-23 03:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("department_name", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("created_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "Department",
            },
        ),
        migrations.CreateModel(
            name="Designation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("designation_name", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("created_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "Designation",
            },
        ),
        migrations.CreateModel(
            name="LEAVETYPE",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("leave_type", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "LEAVETYPE",
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("user_type", models.CharField(default="employee", max_length=20)),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Employees",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "finger_print_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("date_of_birth", models.DateTimeField()),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        max_length=8,
                        null=True,
                    ),
                ),
                (
                    "nationality",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "iqama_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("mob_no", models.CharField(blank=True, max_length=16, null=True)),
                ("joining_date", models.DateTimeField()),
                ("work_status", models.BooleanField(default=True)),
                ("basic_salary", models.FloatField(default=0)),
                ("gosi_applicable", models.BooleanField(default=True)),
                ("gosi_deduction_amount", models.FloatField(default=0)),
                ("filename", models.CharField(max_length=255)),
                ("file", models.FileField(blank=True, null=True, upload_to="uploads/")),
                ("upload_date", models.DateTimeField(auto_now=True)),
                ("created_date", models.DateTimeField(auto_now=True)),
                (
                    "workshift",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Morning", "Morning"),
                            ("Evening", "Evening"),
                            ("Night", "Night"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "profile_pic",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics/"),
                ),
                ("over_time_salary", models.FloatField(default=0)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="department_id",
                        to="attendanceapp.department",
                    ),
                ),
                (
                    "designation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="desination_id",
                        to="attendanceapp.designation",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_details",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "EmployeeDetail",
                "verbose_name_plural": "EmployeeDetails",
                "db_table": "employee_details",
            },
        ),
        migrations.CreateModel(
            name="EmployeeLeaveDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("leave_count", models.IntegerField(default=0)),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_id_leave_details",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee_leave_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_id_leavetype",
                        to="attendanceapp.leavetype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Employee LeaveDetail",
                "verbose_name_plural": "Employee LeaveDetails",
                "db_table": "EmployeeLeaveDetails",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "organization_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "organization_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "organization_details",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_date", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_id_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "organization detail",
                "verbose_name_plural": "organizations details",
                "db_table": "organization",
            },
        ),
        migrations.CreateModel(
            name="License",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=255, unique=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="licenses",
                        to="attendanceapp.organization",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="leavetype",
            name="organization_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="organization_leave_id",
                to="attendanceapp.organization",
            ),
        ),
        migrations.CreateModel(
            name="LeaveMangement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("leave_days", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("remarks", models.TextField(blank=True, null=True)),
                ("created_date", models.DateTimeField(auto_now=True)),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_id_leave",
                        to="attendanceapp.employees",
                    ),
                ),
                (
                    "leave_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_leave_type",
                        to="attendanceapp.leavetype",
                    ),
                ),
                (
                    "organization_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_leavemanagement_id",
                        to="attendanceapp.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Leave Management",
                "verbose_name_plural": "Leave Managements",
                "db_table": "leave_management",
            },
        ),
        migrations.CreateModel(
            name="leaveDaysOfThisYearWise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("leave_name", models.CharField(max_length=255)),
                ("leave_date", models.DateTimeField()),
                ("added_date", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_id_created_by_leaveDaysOfThisYearWise",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_leaveDays_id",
                        to="attendanceapp.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "leaveDays Of This Year Wise",
                "verbose_name_plural": "leave Days Of This Year Wise",
                "db_table": "leaveDays_Of_This_Year_Wise",
            },
        ),
        migrations.AddField(
            model_name="employees",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="employee_organization",
                to="attendanceapp.organization",
            ),
        ),
        migrations.CreateModel(
            name="DeviceSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("device_name", models.CharField(max_length=255)),
                ("device_ip", models.CharField(max_length=255)),
                ("device_port", models.CharField(max_length=255)),
                ("sync_interval", models.DateTimeField(blank=True, null=True)),
                ("last_sync_interval", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_date", models.DateTimeField(auto_now=True)),
                (
                    "organization_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_devicesetting_id",
                        to="attendanceapp.organization",
                    ),
                ),
            ],
            options={
                "db_table": "device_setting",
            },
        ),
        migrations.AddField(
            model_name="designation",
            name="organization_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="organization_designation_id",
                to="attendanceapp.organization",
            ),
        ),
        migrations.AddField(
            model_name="department",
            name="organization_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="organization_department_id",
                to="attendanceapp.organization",
            ),
        ),
        migrations.CreateModel(
            name="Configuration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "workshift",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Morning", "Morning"),
                            ("Evening", "Evening"),
                            ("Night", "Night"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("punch_in_start_time", models.TimeField(blank=True, null=True)),
                ("punch_in_end_time", models.TimeField(blank=True, null=True)),
                ("punch_in_start_late_time", models.TimeField(blank=True, null=True)),
                ("punch_in_end_late_time", models.TimeField(blank=True, null=True)),
                ("punch_out_start_time", models.TimeField(blank=True, null=True)),
                ("punch_out_end_time", models.TimeField(blank=True, null=True)),
                ("over_time_working_end_time", models.TimeField(blank=True, null=True)),
                (
                    "organization_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_config_id",
                        to="attendanceapp.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "configuration Management",
                "verbose_name_plural": "configuration Managements",
                "db_table": "configuration_management",
            },
        ),
        migrations.CreateModel(
            name="AttendanceRecords",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now=True)),
                ("check_in_time", models.TimeField(blank=True)),
                (
                    "present_one",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Present", "Present"),
                            ("Absent", "Absent"),
                            ("Late", "Late"),
                            ("On Early", "OnEarly"),
                            ("On Leave", "OnLeave"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "present_two",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Present", "Present"),
                            ("Absent", "Absent"),
                            ("Late", "Late"),
                            ("On Early", "OnEarly"),
                            ("On Leave", "OnLeave"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("check_out_time", models.TimeField(blank=True)),
                ("work_hours", models.FloatField(default=0)),
                ("is_overtime", models.BooleanField(default=False)),
                ("overtime_hours", models.FloatField(default=0)),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_idss",
                        to="attendanceapp.employees",
                    ),
                ),
                (
                    "organization_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_attendance_id",
                        to="attendanceapp.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "AttendanceRecord",
                "verbose_name_plural": "AttendanceRecords",
                "db_table": "attendance_records",
            },
        ),
        migrations.CreateModel(
            name="PayrollRecords",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("month", models.DateField(blank=True, null=True)),
                ("basic_salary", models.FloatField(default=0)),
                ("total_days", models.IntegerField(default=0)),
                ("present_days", models.IntegerField(default=0)),
                ("absent_days", models.IntegerField(default=0)),
                ("allowance", models.FloatField(default=0)),
                ("deduction", models.FloatField(default=0)),
                ("net_salary", models.FloatField(default=0)),
                ("created_date", models.DateTimeField(auto_now=True)),
                ("total_overtime_hours", models.FloatField(default=0)),
                ("over_time_salary", models.FloatField(default=0)),
                ("total_working_hours", models.FloatField(default=0)),
                ("payroll_generated", models.BooleanField(default=False)),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee_ids",
                        to="attendanceapp.employees",
                    ),
                ),
                (
                    "organization_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_payroll_id",
                        to="attendanceapp.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payroll Record",
                "verbose_name_plural": "payroll Records",
                "db_table": "payroll_records",
            },
        ),
        migrations.AddConstraint(
            model_name="leavetype",
            constraint=models.UniqueConstraint(
                fields=("leave_type",), name="unique leavetype"
            ),
        ),
        migrations.AddConstraint(
            model_name="employees",
            constraint=models.UniqueConstraint(
                fields=("finger_print_code",), name="unique_Fingerprint"
            ),
        ),
        migrations.AddConstraint(
            model_name="devicesetting",
            constraint=models.UniqueConstraint(
                fields=("device_name",), name="unique device"
            ),
        ),
        migrations.AddConstraint(
            model_name="designation",
            constraint=models.UniqueConstraint(
                fields=("designation_name",), name="unique designation"
            ),
        ),
        migrations.AddConstraint(
            model_name="department",
            constraint=models.UniqueConstraint(
                fields=("department_name",), name="unique depart"
            ),
        ),
    ]
